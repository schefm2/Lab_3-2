Psuedocode

compiler directives
	#include <c8051_SDCC.h>
	#include <stdio.h>
    #include <i2c.h>

declare global vars
    r_ct = 0;

function prototypes
    void Port_Init(void);
	void Interrupt_Init(void);
    void PCA_Init(void);
	void XBR0_Init(void);
	void PCA_ISR(void) __interrupt 9;
    void SMB_Init(void);

    void readUSRanger(void);

main function
	declare local variables
		(NONE)
	initialization functions
		Sys_Init();
		putchar(' ');
		Port_Init();
		XBR0_Init();
		PCA_Init();

        Start infinite loop
            if 80 ms have passed // r_ct >= 4
                call ranger distance function // readUSRanger
		End infinite loop
End main function
		
Functions
	Port_Init
		Set P1.2 to push-pull
	End Port_Init
	
	XBR0_Init
		Configure crossbar to use UART0, SPI, SMBus, and up to CEX3
	End XBR0_Init
	
	PCA_Init
		Enable CF interrupt and SYSCLK/12 on PCA0
		Put CCM0 in 16-bit compare mode, enable PWM on PCA0CPM0
		Enable PCA0 counter with PCA0CN
		Enable PCA interrupt in EIE1
		Enable global interrupt with EA
	End PCA_Init
	
	PCA_ISR
		if CF flag is raised
			Lower CF flag
			Set PCA0 starting value for 20 ms pulses
            r_ct incremented
		Handle other PCA0 interrupt sources with PCA0CN
	End PCA_ISR

    SMB_Init
        SMB0CR = 0x93
        ENSMB = 1
    End SMB_Init

    readUSRanger
        read range
        write 0x81 to ranger (location: 0xE0) to get ranging mode in cm
        print range
        set r_ct = 0 (80 ms flag)
    end readUSRanger
